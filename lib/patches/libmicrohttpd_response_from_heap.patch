diff --git a/lib/libmicrohttpd/src/include/microhttpd.h b/lib/libmicrohttpd/src/include/microhttpd.h
index 011285c..21cb5a6 100644
--- a/lib/libmicrohttpd/src/include/microhttpd.h
+++ b/lib/libmicrohttpd/src/include/microhttpd.h
@@ -2720,6 +2720,22 @@ MHD_create_response_from_buffer (size_t size,
  * header information and then be used any number of times.
  *
  * @param size size of the data portion of the response
+ * @param buffer size bytes containing the response's data portion
+ * @param crfc callback to call to free @a buffer resources
+ * @return NULL on error (i.e. invalid arguments, out of memory)
+ * @ingroup response
+ */
+_MHD_EXTERN struct MHD_Response *
+MHD_create_response_from_heap (size_t size,
+			       void *buffer,
+                   MHD_ContentReaderFreeCallback crfc);
+
+
+/**
+ * Create a response object.  The response object can be extended with
+ * header information and then be used any number of times.
+ *
+ * @param size size of the data portion of the response
  * @param fd file descriptor referring to a file on disk with the
  *        data; will be closed when response is destroyed;
  *        fd should be in 'blocking' mode
diff --git a/lib/libmicrohttpd/src/microhttpd/response.c b/lib/libmicrohttpd/src/microhttpd/response.c
index d677cf6..9fae306 100644
--- a/lib/libmicrohttpd/src/microhttpd/response.c
+++ b/lib/libmicrohttpd/src/microhttpd/response.c
@@ -679,6 +679,28 @@ MHD_create_response_from_buffer (size_t size,
 }
 
 
+/**
+ * Create a response object.  The response object can be extended with
+ * header information and then be used any number of times.
+ *
+ * @param size size of the data portion of the response
+ * @param buffer size bytes containing the response's data portion
+ * @param crfc callback to call to free @a buffer resources
+ * @return NULL on error (i.e. invalid arguments, out of memory)
+ * @ingroup response
+ */
+struct MHD_Response *
+MHD_create_response_from_heap (size_t size,
+			       void *buffer,
+			       MHD_ContentReaderFreeCallback crfc)
+{
+  struct MHD_Response *response = MHD_create_response_from_data (size, buffer, 1, 0);
+  if (response)
+    response->crfc = crfc;
+  return response;
+}
+
+
 #ifdef UPGRADE_SUPPORT
 /**
  * This connection-specific callback is provided by MHD to
