# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see https://www.gnu.org/licenses/.

- name: Install packages
  package:
    update_cache: yes
    pkg:
      - ufw
    state: latest
  become: yes

- name: Avoid SSH IP binding (too fragile with VPN)
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: '^ListenAddress'
    state: absent
  become: yes

- name: Set public SSH port
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: '^Port'
    line: 'Port {{ ssh_port }}'
    state: present
  become: yes

- name: Disable root login over SSH
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: '^PermitRootLogin'
    line: 'PermitRootLogin no'
    state: present
  become: yes

- name: Set root password for emergency console
  user:
    name: root
    state: present
    password: '{{ root_password | string | password_hash(salt = (root_salt | string)) }}'
  when: 'root_password is defined'
  become: yes

- name: Reload sshd to apply new settings
  service:
    name: sshd
    state: reloaded
  when: 'not ansible_check_mode'
  become: yes

- name: Configure IPv6 (OVH)
  template:
    src: ovh_ipv6.cfg.j2
    dest: /etc/network/interfaces.d/51-cloud-init-ipv6.cfg
    owner: root
    group: root
    mode: '0644'
  register: ovh_ipv6_config
  when: 'ovh_ipv6_addr is defined'
  become: yes

- name: Enable IPv6 (OVH)
  service:
    name: networking
    state: restarted
  when: ovh_ipv6_config.changed
  become: yes

- name: Disable ufw logging
  ufw:
    logging: off
  become: yes

- name: Configure ufw rules
  ufw:
    rule: '{{ item.rule }}'
    to: '{{ item.to | default("any") }}'
    port: '{{ item.port }}'
    proto: '{{ item.proto }}'
  loop: '{{ ufw_rules }}'
  become: yes

- name: Configure ufw defaults
  ufw:
    direction: '{{ item.direction }}'
    policy: '{{ item.policy }}'
  loop:
    - direction: incoming
      policy: deny
    - direction: outgoing
      policy: allow
  become: yes

- name: Enable ufw
  ufw:
    state: enabled
  become: yes

- name: Reload ufw
  ufw:
    state: reloaded
  when: 'not ansible_check_mode'
  become: yes

- name: Restrict ptrace scope (YAMA)
  sysctl:
    name: kernel.yama.ptrace_scope
    value: '3'
    sysctl_set: yes
  become: yes

- name: Set up weekly upgrade and reboot (Debian)
  cron:
    name: weekly_upgrade
    weekday: sun
    hour: 5
    minute: 0
    state: '{{ "present" if weekly_upgrade else "absent" }}'
    job: '/usr/bin/apt update -y && /usr/bin/apt upgrade -y && /usr/sbin/shutdown -r now'
  become: yes
