# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see https://www.gnu.org/licenses/.

- name: Configure ansible user
  user:
    name: ansible
    state: present
  become: yes

- name: Build SSH key path (local)
  set_fact:
    ssh_key_dir: '{{ lookup("env", "HOME") }}/.ssh/{{ ansible_play_name }}'
    ssh_key_file: '{{ lookup("env", "HOME") }}/.ssh/{{ ansible_play_name }}/{{ inventory_file | basename | splitext | first }}_{{ inventory_hostname }}'

- name: Create SSH key (local)
  shell:
    cmd: |
      mkdir -p {{ ssh_key_dir }}
      ssh-keygen -t ed25519 -f {{ ssh_key_file }} -N ""
    creates: '{{ ssh_key_file }}'
    warn: no
  delegate_to: localhost
  become: no

- name: Authorize ansible SSH key
  authorized_key:
    user: ansible
    state: present
    key: '{{ lookup("file", "{{ ssh_key_file }}.pub") }}'
  become: yes

- name: Install packages
  package:
    update_cache: yes
    pkg:
      - ufw
    state: latest
  become: yes

- name: Configure IPv6 (OVH)
  template:
    src: ovh_ipv6.cfg.j2
    dest: /etc/network/interfaces.d/51-cloud-init-ipv6.cfg
    owner: root
    group: root
    mode: '0644'
  register: ovh_ipv6_config
  when: 'ovh_ipv6_addr is defined'
  become: yes

- name: Enable IPv6 (OVH)
  service:
    name: networking
    state: restarted
  when: ovh_ipv6_config.changed
  become: yes

- name: Configure ufw defaults
  ufw:
    direction: '{{ item.direction }}'
    policy: '{{ item.policy }}'
  loop:
    - direction: incoming
      policy: deny
    - direction: outgoing
      policy: allow
  become: yes

- name: Configure ufw rules
  ufw:
    rule: '{{ item.rule }}'
    port: '{{ item.port }}'
    proto: '{{ item.proto }}'
  loop:
    - rule: limit
      port: 22
      proto: tcp
    - rule: allow
      port: 80
      proto: tcp
    - rule: allow
      port: 443
      proto: tcp
  become: yes

- name: Enable ufw
  ufw:
    state: enabled
  become: yes

- name: Reload ufw
  ufw:
    state: reloaded
  when: 'not ansible_check_mode'
  become: yes

# - name: Delete default debian user
#   user:
#     name: debian
#     state: absent
#     remove: yes
#     force: yes
#   become: yes
