# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see https://www.gnu.org/licenses/.

- name: Install packages
  apt:
    update_cache: yes
    pkg:
      - libncursesw5-dev
      - libmaxminddb-dev
      - make
      - gcc
      - python3-passlib
    state: latest
  become: yes

- name: Prepare GoAccess base directories
  file:
    path: '{{ item.path }}'
    state: directory
    owner: '{{ item.owner }}'
    group: '{{ item.group }}'
    mode: '0755'
  loop:
    - path: '{{ goaccess_root_path }}'
      owner: root
      group: root
    - path: '{{ goaccess_root_path }}/html'
      owner: www-data
      group: www-data
    - path: '{{ goaccess_root_path }}/src'
      owner: '{{ ansible_user | default(lookup("env", "USER"), True) }}'
      group: root
  become: yes

- name: Fetch GoAccess source
  get_url:
    url: '{{ goaccess_url }}'
    dest: '{{ goaccess_root_path }}/src/goaccess.tar.gz'
    checksum: '{{ goaccess_checksum }}'
  register: download_source
  become: no

- name: Extract GoAccess source
  unarchive:
    src: '{{ goaccess_root_path }}/src/goaccess.tar.gz'
    dest: '{{ goaccess_root_path }}/src'
    remote_src: true
    extra_opts:
      - '--strip-components=1'
  when: download_source.changed
  become: no

- name: Build GoAccess
  shell:
    cmd: |
      ./configure --enable-utf8 --enable-geoip=mmdb
      make
    chdir: '{{ goaccess_root_path }}/src'
  register: build_goaccess
  changed_when: '"-Wall" in build_goaccess.stdout'
  become: no

- name: Install GoAccess binary
  copy:
    src: '{{ goaccess_root_path }}/src/goaccess'
    dest: '{{ goaccess_root_path }}/goaccess'
    remote_src: yes
    owner: root
    group: root
    mode: '0755'
  become: yes

- name: Create update script
  template:
    src: update.sh.j2
    dest: '{{ goaccess_root_path }}/update.sh'
    owner: root
    group: root
    mode: '0755'
  become: yes

- name: Create htpasswd security files
  htpasswd:
    path: '{{ goaccess_root_path }}/html/{{ item.name }}.htpasswd'
    name: '{{ item.username }}'
    password: '{{ item.password }}'
    owner: root
    group: root
    mode: '0644'
  loop: '{{ goaccess_domains }}'
  when: 'item.username is defined'
  become: yes

- name: Install scheduled update systemd units
  template:
    src: '{{ item }}.j2'
    dest: '/etc/systemd/system/{{ item }}'
    owner: root
    group: root
    mode: '0644'
  loop:
    - goaccess.service
    - goaccess.timer
  become: yes

- name: Reload systemd units
  systemd:
    daemon_reload: yes
  when: 'not ansible_check_mode'
  become: yes

- name: Enabled scheduled backups
  service:
    name: goaccess.timer
    state: started
    enabled: yes
  become: yes
