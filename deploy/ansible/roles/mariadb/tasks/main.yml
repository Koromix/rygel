# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see https://www.gnu.org/licenses/.

- name: Install packages
  apt:
    update_cache: yes
    pkg:
      - mariadb-server
      - python3-pymysql
      - acl
    state: latest
  become: yes

- name: Start MariaDB service
  service:
    name: mariadb
    state: started
    enabled: yes
  become: yes

- name: Secure default MariaDB installation
  shell: |
    /usr/bin/mysql -uroot -proot -e "ALTER USER 'root'@'localhost' IDENTIFIED WITH auth_socket;"
    /usr/bin/mysql -uroot -proot -e "DROP DATABASE IF EXISTS test;"
  when: 'not ansible_check_mode'
  become: yes

- name: Create databases
  community.mysql.mysql_db:
    login_unix_socket: /run/mysqld/mysqld.sock
    login_user: root
    name: '{{ item.database }}'
    state: present
  loop: '{{ mariadb_databases }}'
  become: yes

- name: Create database-specific users
  community.mysql.mysql_user:
    login_unix_socket: /run/mysqld/mysqld.sock
    login_user: root
    name: '{{ item.user }}'
    password: '{{ item.password }}'
    priv: '{{ item.database }}.*:ALL'
    state: present
  loop: '{{ mariadb_databases }}'
  become: yes

- name: Create backup directories
  file:
    path: '{{ item.path }}'
    state: directory
    owner: root
    group: root
    mode: '{{ item.mode }}'
  loop:
    - path: '{{ mariadb_backup_path }}'
      mode: '0755'
    - path: '{{ mariadb_backup_path }}/backups'
      mode: '0700'
  become: yes

- name: Create backup script
  template:
    src: backup.sh.j2
    dest: '{{ mariadb_backup_path }}/backup.sh'
    owner: root
    group: root
    mode: '0755'
  become: yes

- name: Install scheduled backup systemd units
  template:
    src: '{{ item }}.j2'
    dest: '/etc/systemd/system/{{ item }}'
    owner: root
    group: root
    mode: '0644'
  loop:
    - mariadb_backup.service
    - mariadb_backup.timer
  become: yes

- name: Reload systemd units
  systemd:
    daemon_reload: yes
  when: 'not ansible_check_mode'
  become: yes

- name: Enabled scheduled backups
  service:
    name: mariadb_backup.timer
    state: started
    enabled: yes
  become: yes
