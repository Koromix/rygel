# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see https://www.gnu.org/licenses/.

{% import 'nginx_util.conf.j2' as util %}

user www-data www-data;

worker_processes auto;
pid /run/nginx.pid;

events {
    worker_connections 8192;
}

http {
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 60;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    limit_req_zone $binary_remote_addr zone=default:10m rate=20r/s;
    limit_req_status 429;
    limit_req zone=default burst=20 nodelay;

    server {
        {{ util.configure_http('_') }}

        location / {
            return 404;
        }

        location /stub_status {
            allow 127.0.0.1;
            allow ::1;
            deny all;

            stub_status on;
        }
    }

    server {
        {{ util.configure_https('_') }}

        ssl_certificate /opt/nginx/ssl/internal/{{ inventory_hostname }}.crt;
        ssl_certificate_key /opt/nginx/ssl/internal/{{ inventory_hostname }}.key;

        location / {
            return 404;
        }
    }

{% for domain in nginx_domains %}

    server {
        {{ util.configure_http(domain.name) }}

        location / {
            return 301 https://$host$request_uri;
        }

        location /.well-known/acme-challenge {
            root /opt/nginx/ssl/webroot/{{ domain.name }};
        }
    }

    server {
        {{ util.configure_https(domain.name) }}

        ssl_certificate /etc/letsencrypt/live/{{ domain.name }}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/{{ domain.name }}/privkey.pem;

        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains" always;

        location / {
            proxy_http_version 1.1;
            proxy_request_buffering off;
            proxy_buffering off;

            proxy_ssl_certificate /opt/nginx/ssl/internal/{{ inventory_hostname }}.crt;
            proxy_ssl_certificate_key /opt/nginx/ssl/internal/{{ inventory_hostname }}.key;
            proxy_ssl_protocols TLSv1.2 TLSv1.3;
            proxy_ssl_ciphers CDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
            proxy_ssl_session_reuse on;
            proxy_ssl_trusted_certificate /opt/nginx/ssl/internal/ca.crt;
            proxy_ssl_verify on;
            proxy_ssl_verify_depth 2;

            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            proxy_pass https://{{ nginx_back_addr }};
        }
    }
{% endfor %}
}
