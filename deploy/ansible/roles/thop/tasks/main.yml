# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see https://www.gnu.org/licenses/.

- name: Install Debian packages
  include: pkg_debian.yml
  when: 'ansible_os_family == "Debian"'

- name: Install distribution packages
  include: pkg_generic.yml
  when: 'ansible_os_family != "Debian"'

- name: Create THOP user
  user:
    name: thop
    create_home: no
    home: /nonexistent
    shell: /usr/sbin/nologin
    system: yes
  register: thop_user
  become: yes

- name: Prepare THOP installation directories
  file:
    path: '{{ item }}'
    state: directory
    owner: root
    group: root
    mode: '0755'
  loop:
    - '{{ thop_root_path }}'
    - '{{ thop_root_path }}/profile'
    - '{{ thop_root_path }}/tables'
  become: yes

- name: Prepare THOP repository directory
  file:
    path: '{{ thop_root_path }}/repo'
    state: directory
    owner: '{{ ansible_user | default(lookup("env", "USER"), True) }}'
    recurse: yes
  become: yes

- name: Fetch THOP repository
  git:
    repo: '{{ thop_repo }}'
    version: '{{ thop_commit }}'
    dest: '{{ thop_root_path }}/repo'
    force: yes
  become: no

- name: Update configuration files
  template:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    owner: root
    group: root
    mode: '{{ item.mode }}'
  loop:
    - src: thop.ini.j2
      dest: '{{ thop_root_path }}/thop.ini'
      mode: '0644'
    - src: thop.service.j2
      dest: /etc/systemd/system/thop.service
      mode: '0644'
  register: upload_config
  become: yes

- name: Reload systemd units
  systemd:
    daemon_reload: yes
  when: upload_config.changed
  become: yes

- name: Update Felix build system
  command:
    cmd: '{{ thop_root_path }}/repo/bin/Paranoid/felix -pParanoid --host=,clang-11,lld-11 felix'
    chdir: '{{ thop_root_path }}/repo'
  ignore_errors: yes
  register: build_felix
  changed_when: 'not build_felix.failed and build_felix.stderr_lines[-1] != "Nothing to do!" and build_felix.stderr_lines[-2] != "Nothing to do!"'
  become: no

- name: Bootstrap Felix
  block:
    - name: Bootstrap Felix
      shell:
        cmd: '{{ thop_root_path }}/repo/bootstrap.sh'
        chdir: '{{ thop_root_path }}/repo'
    - name: Update Felix build system
      command:
        cmd: '{{ thop_root_path }}/repo/felix -pParanoid --host=,clang-11,lld-11 felix'
        chdir: '{{ thop_root_path }}/repo'
    - name: Delete bootstrapped Felix
      file:
        path: '{{ thop_root_path }}/repo/felix'
        state: absent
  when: 'not ansible_check_mode and build_felix.rc != 0'
  become: no

- name: Build THOP
  command:
    cmd: '{{ thop_root_path }}/repo/bin/Paranoid/felix -pParanoid --host=,clang-11,lld-11 thop felix'
    chdir: '{{ thop_root_path }}/repo'
  register: build_thop
  changed_when: 'build_thop.stderr_lines[-1] != "Nothing to do!" and build_thop.stderr_lines[-2] != "Nothing to do!"'
  become: no

- name: Install THOP
  copy:
    src: '{{ thop_root_path }}/repo/bin/Paranoid/thop'
    remote_src: yes
    dest: '{{ thop_root_path }}/thop'
    owner: root
    group: root
    mode: '0755'
  become: yes

- name: Install THOP tables
  get_url:
    url: '{{ thop_tables }}'
    dest: '{{ thop_root_path }}/tables/tables.zip'
  register: download_tables
  become: yes

- name: Extract THOP tables
  unarchive:
    src: '{{ thop_root_path }}/tables/tables.zip'
    dest: '{{ thop_root_path }}/tables'
    remote_src: true
  when: download_tables.changed
  become: yes

- name: Restart THOP
  service:
    name: nginx
    state: restarted
  when: build_thop.changed
  become: yes
