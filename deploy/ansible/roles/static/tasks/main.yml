# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see https://www.gnu.org/licenses/.

- name: Install packages
  package:
    update_cache: yes
    pkg:
      - git
      - rsync
      - python3
      - python3-venv
      - python3-cachecontrol
      - php7.4-cli
      - php7.4-mysql
      - php7.4-curl
      - php7.4-gd
      - php7.4-intl
      - php7.4-fpm
      - php7.4-sqlite3
      - make
      - curl
      - acl
    state: latest
  become: yes

- name: Prepare static directories
  file:
    path: '{{ item.path }}'
    state: directory
    owner: '{{ item.owner }}'
    group: '{{ item.group }}'
    mode: '0755'
  loop:
    - path: '{{ static_root_path }}'
      owner: root
      group: root
    - path: '{{ static_root_path }}/live'
      owner: www-data
      group: www-data
    - path: '{{ static_root_path }}/poetry'
      owner: www-data
      group: www-data
    - path: '{{ static_root_path }}/poetry/cache'
      owner: www-data
      group: www-data
  become: yes

- name: Install Poetry
  shell:
    cmd: 'curl -sSL https://install.python-poetry.org | python3 -'
    creates: '{{ static_root_path }}/poetry/bin/poetry'
  environment:
    POETRY_HOME: '{{ static_root_path }}/poetry'
    POETRY_CACHE_DIR: '{{ static_root_path }}/poetry/cache'
  become: yes
  become_user: www-data

- name: Prepare static repository directory
  file:
    path: '{{ static_root_path }}/repo'
    state: directory
    owner: www-data
    group: www-data
    recurse: yes
  become: yes

- name: Clone repositories
  git:
    repo: '{{ item.repo }}'
    version: '{{ item.version | default("HEAD") }}'
    dest: '{{ static_root_path }}/repo/{{ item.name }}'
    depth: 1
    force: yes
  loop: '{{ static_deploys }}'
  when: 'item.repo is defined'
  become: yes
  become_user: www-data

- name: Create live directories
  file:
    path: '{{ static_root_path }}/live/{{ item.name }}'
    state: directory
    owner: www-data
    group: www-data
    recurse: yes
  loop: '{{ static_deploys }}'
  become: yes

- name: Run build commands
  command:
    cmd: '{{ item.cmd }}'
    chdir: '{{ item.chdir | default(".") }}'
  environment:
    POETRY_HOME: '{{ static_root_path }}/poetry'
    POETRY_CACHE_DIR: '{{ static_root_path }}/poetry/cache'
  loop: '{{ static_deploys | map(attribute="build", default=[]) | flatten }}'
  become: yes
  become_user: www-data

- name: Extract static subdirectories
  synchronize:
    src: '{{ static_root_path }}/repo/{{ item.name }}/{{ item.path }}/'
    dest: '{{ static_root_path }}/live/{{ item.name }}/'
    delete: yes
    recursive: yes
    owner: yes
    rsync_opts:
      - '--exclude=".*"'
      - '--filter="P *.db*"'
  delegate_to: '{{ inventory_hostname }}'
  loop: '{{ static_deploys }}'
  when: 'item.repo is defined'
  become: yes
