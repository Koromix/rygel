# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see https://www.gnu.org/licenses/.

- name: Install packages
  apt:
    update_cache: yes
    pkg:
      - git
    state: latest
  become: yes

- name: Configure gitea user
  user:
    name: gitea
    state: present
  become: yes

- name: Prepare Gitea base directory
  file:
    path: '{{ gitea_root_path }}'
    state: directory
    owner: root
    group: root
    mode: '0755'
  become: yes

- name: Prepare Gitea data directories
  file:
    path: '{{ item }}'
    state: directory
    owner: gitea
    group: gitea
    mode: '0750'
  loop:
    - '{{ gitea_root_path }}/custom'
    - '{{ gitea_root_path }}/etc'
    - '{{ gitea_root_path }}/data'
    - '{{ gitea_root_path }}/log'
  become: yes

- name: Fetch Gitea binary
  get_url:
    url: '{{ gitea_url }}'
    dest: '{{ gitea_root_path }}/gitea'
    checksum: '{{ gitea_checksum }}'
    owner: root
    group: root
    mode: '0755'
  become: yes

- name: Configure Gitea
  template:
    src: app.ini.j2
    dest: '{{ gitea_root_path }}/etc/app.ini'
    owner: gitea
    group: gitea
    mode: '0644'
  become: yes

- name: Create Gitea keys
  shell:
    cmd: '{{ gitea_root_path }}/gitea generate secret {{ item | upper }} > etc/{{ item }}'
    chdir: '{{ gitea_root_path }}'
    creates: '{{ gitea_root_path }}/etc/{{ item }}'
  loop:
    - secret_key
    - internal_token
  become: yes

- name: Securize Gitea keys
  file:
    path: '{{ gitea_root_path }}/etc/{{ item }}'
    state: file
    owner: gitea
    group: gitea
    mode: '0600'
  loop:
    - secret_key
    - internal_token
  become: yes

- name: Install Gitea service file
  template:
    src: gitea.service.j2
    dest: '/etc/systemd/system/gitea.service'
    owner: root
    group: root
    mode: '0644'
  become: yes

- name: Reload systemd units
  systemd:
    daemon_reload: yes
  when: 'not ansible_check_mode'
  become: yes

- name: Restart Gitea service
  service:
    name: gitea
    enabled: yes
    state: restarted
  when: 'not ansible_check_mode'
  become: yes
