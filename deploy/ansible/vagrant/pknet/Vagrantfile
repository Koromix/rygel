# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see https://www.gnu.org/licenses/.

host1_ip = '192.168.33.20'
backup_ip = '192.168.33.28'
monitor_ip = '192.168.33.29'

Vagrant.configure('2') do |config|
    config.hostmanager.enabled = true
    config.hostmanager.manage_host = true

    config.vm.define 'host1' do |m|
        m.vm.box = 'generic/debian10'
        m.vm.hostname = 'pknet-host1.local'
        m.vm.network 'private_network', ip: host1_ip

        # It's kind of ugly to hardcode this but.. meh. Keep it simple
        m.hostmanager.aliases = ['goupile1.pknet.local', 'goupile2.pknet.local']

        m.vm.provider 'virtualbox' do |v|
            v.name = 'pknet_host1'
            v.memory = 4096
            v.cpus = 4
            v.linked_clone = true
            v.gui = false
        end
    end

    config.vm.define 'backup' do |m|
        m.vm.box = 'generic/debian10'
        m.vm.hostname = 'pknet-backup.local'
        m.vm.network 'private_network', ip: backup_ip

        m.vm.provider 'virtualbox' do |v|
            v.name = 'pknet_backup'
            v.memory = 1024
            v.cpus = 1
            v.linked_clone = true
            v.gui = false
        end
    end

    config.vm.define 'monitor' do |m|
        m.vm.box = 'generic/debian10'
        m.vm.hostname = 'pknet-monitor.local'
        m.vm.network 'private_network', ip: monitor_ip

        m.vm.provider 'virtualbox' do |v|
            v.name = 'pknet_monitor'
            v.memory = 1024
            v.cpus = 1
            v.linked_clone = true
            v.gui = false
        end

        m.vm.provision 'ansible' do |ansible|
            ansible.playbook = '../../pknet.yml'
            ansible.limit = 'all'
            ansible.inventory_path = '../../inventories/pknet/vagrant.yml'
            ansible.extra_vars = { ansible_python_interpreter: '/usr/bin/python3' }
            # ansible.raw_arguments = ['--check']
        end
    end
end
