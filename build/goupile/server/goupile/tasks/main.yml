- name: Get connected user name
  command: whoami
  changed_when: false
  register: whoami
  become: false

- name: Install packages
  package:
    update_cache: yes
    pkg:
      - nginx
      - git
      - gcc
      - g++
    state: latest
  become: yes

- name: Create Goupile user
  user:
    name: goupile
    create_home: no
    home: /nonexistent
    shell: /usr/sbin/nologin
    system: yes
  become: yes

- name: Prepare Goupile directories
  file:
    path: '{{item.path}}'
    state: 'directory'
    owner: '{{item.owner}}'
    mode: '0755'
  loop:
    - path: '{{goupile_root}}'
      owner: 'root'
    - path: '{{goupile_root}}/src'
      owner: '{{whoami.stdout}}'
    - path: '{{goupile_root}}/domains'
      owner: 'goupile'
    - path: '{{goupile_root}}/nginx/domains.d'
      owner: 'root'
  become: yes

- name: Fetch Goupile repository
  git:
    repo: https://framagit.org/interhop/goupile.git
    dest: '{{goupile_root}}/src'
  become: no

- name: Check existing Felix build system
  stat:
    path: '{{goupile_root}}/src/felix'
  register: felix_stat
  become: no

- name: Get Felix version
  command:
    cmd: '{{goupile_root}}/src/felix --version'
  changed_when: no
  when: 'felix_stat.stat.exists'
  register: felix_version
  become: no

- name: Get repository version
  command:
    cmd: 'git -C "{{goupile_root}}/src" log -n1 --pretty=format:%cd_%h --date=format:%Y%m%d.%H%M'
  changed_when: no
  when: 'felix_stat.stat.exists'
  register: repo_version
  become: no

- name: Bootstrap Felix
  shell:
    cmd: '{{goupile_root}}/src/build/felix/build_posix.sh'
    chdir: '{{goupile_root}}/src'
  when: 'not felix_stat.stat.exists or not (repo_version.stdout in felix_version.stdout)'
  become: no

- name: Build Goupile
  command:
    cmd: '{{goupile_root}}/src/felix -cGCC -mFast goupile'
    chdir: '{{goupile_root}}/src'
  register: build_goupile
  changed_when: 'build_goupile.stderr_lines[-1] != "Nothing to do!" and build_goupile.stderr_lines[-2] != "Nothing to do!"'
  become: no

- name: Install Goupile
  copy:
    src: '{{item.src}}'
    remote_src: yes
    dest: '{{item.dest}}'
    owner: 'root'
    group: 'root'
    mode: '0755'
  loop:
    - src: '{{goupile_root}}/src/bin/GCC_Fast/goupile'
      dest: '{{goupile_root}}/goupile'
    - src: '{{goupile_root}}/src/build/goupile/server/sync.py'
      dest: '{{goupile_root}}/sync.py'
  become: yes

- name: Upload configuration files
  template:
    src: '{{item.src}}'
    dest: '{{item.dest}}'
    owner: 'root'
    group: 'root'
    mode: '0644'
  loop:
    - src: sync.ini.j2
      dest: '{{goupile_root}}/sync.ini'
    - src: goupile@.service.j2
      dest: /etc/systemd/system/goupile@.service
    - src: include.conf.j2
      dest: '{{goupile_root}}/nginx/include.conf'
  register: upload_config
  become: yes

- name: Reload systemd units
  systemd:
    daemon_reload: yes
  when: upload_config.changed
  become: yes

- name: Enable and start NGINX
  systemd:
    name: 'nginx'
    enabled: yes
    state: 'started'
  become: yes

- name: Sync Goupile, NGINX and systemd
  command:
    cmd: '{{goupile_root}}/sync.py'
  become: yes
