.\" Access Control Lists manual pages
.\"
.\" (C) 2002 Andreas Gruenbacher, <andreas.gruenbacher@gmail.com>
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual.  If not, see
.\" <http://www.gnu.org/licenses/>.
.\"
.Dd March 23, 2002
.Dt ACL_CMP 3
.Os "Linux ACL"
.Sh NAME
.Nm acl_cmp
.Nd compare two ACLs
.Sh LIBRARY
Linux Access Control Lists library (libacl, \-lacl).
.Sh SYNOPSIS
.In sys/types.h
.In acl/libacl.h
.Ft int
.Fn acl_cmp "acl_t acl1" "acl_t acl2"
.Sh DESCRIPTION
The
.Fn acl_cmp
function compares the ACLs pointed to by the arguments
.Va acl1
and
.Va acl2
for equality. The two ACLs are considered equal if for each entry in
.Va acl1
there is an entry in
.Va acl2
with matching tag type, qualifier, and permissions, and vice versa.
.Sh RETURN VALUE
If successful, the
.Fn acl_cmp
function returns
.Li 0
if the two ACLs
.Va acl1
and
.Va acl2
are equal, and
.Li 1
if they differ. Otherwise, the value
.Li -1
is returned and the global variable
.Va errno
is set to indicate the error.
.Sh ERRORS
If any of the following conditions occur, the
.Fn acl_cmp
function returns
.Li -1
and sets
.Va errno
to the corresponding value:
.Bl -tag -width Er
.It Bq Er EINVAL
The argument
.Va acl1
is not a valid pointer to an ACL.
.Pp
The argument
.Va acl2
is not a valid pointer to an ACL.
.El
.Sh STANDARDS
This is a non-portable, Linux specific extension to the ACL manipulation
functions defined in IEEE Std 1003.1e draft 17 (\(lqPOSIX.1e\(rq, abandoned).
.Sh SEE ALSO
.Xr acl 5
.Sh AUTHOR
Written by
.An "Andreas Gruenbacher" Aq andreas.gruenbacher@gmail.com .
