.\" Access Control Lists manual pages
.\"
.\" (C) 2002 Andreas Gruenbacher, <andreas.gruenbacher@gmail.com>
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual.  If not, see
.\" <http://www.gnu.org/licenses/>.
.\"
.Dd March 23, 2002
.Dt ACL_SET_QUALIFIER 3
.Os "Linux ACL"
.Sh NAME
.Nm acl_set_qualifier
.Nd set the qualifier of an ACL entry
.Sh LIBRARY
Linux Access Control Lists library (libacl, \-lacl).
.Sh SYNOPSIS
.In sys/types.h
.In sys/acl.h
.Ft int
.Fn acl_set_qualifier "acl_entry_t entry_d" "const void *qualifier_p"
.Sh DESCRIPTION
The
.Fn acl_set_qualifier
function sets the qualifier of the ACL entry indicated by the argument
.Va entry_d
to the value referred to by the argument
.Va qualifier_p .
If the value of the tag type in the ACL entry referred to by
.Va entry_d
is ACL_USER, then the value referred to by
.Va qualifier_p
shall be of type
.Va uid_t .
If the value of the tag type in the ACL entry referred to by
.Va entry_d
is ACL_GROUP, then the value referred to by
.Va qualifier_p
shall be of type
.Va gid_t .
If the value of the tag type in the ACL entry referred to by
.Va entry_d
is a tag type for which a qualifier is not supported, 
.Fn acl_set_qualifier
returns an error.
.Pp
Any ACL entry descriptors that refer to the entry referred to by
.Va entry_d
continue to refer to that entry. This function may cause memory to be
allocated. The caller should free any releasable memory, when the ACL
is no longer required, by calling
.Fn acl_free
with a pointer to the ACL as argument.
.Sh RETURN VALUE
.Rv -std acl_set_qualifier
.Sh ERRORS
If any of the following conditions occur, the
.Fn acl_set_qualifier
function returns
.Li -1
and sets
.Va errno
to the corresponding value:
.Bl -tag -width Er
.It Bq Er EINVAL
The argument
.Va entry_d
is not a valid descriptor for an ACL entry.
.Pp
The value of the tag type in the ACL entry referenced by the argument
.Va entry_d
is neither ACL_USER nor ACL_GROUP.
.Pp
The value pointed to by the argument
.Va qualifier_p
is not valid.
.It Bq Er ENOMEM
The
.Fn acl_set_qualifier
function is unable to allocate the memory required for the ACL qualifier.
.El
.Sh STANDARDS
IEEE Std 1003.1e draft 17 (\(lqPOSIX.1e\(rq, abandoned)
.Sh SEE ALSO
.Xr acl_create_entry 3 ,
.Xr acl_free 3 ,
.Xr acl_get_permset 3 ,
.Xr acl_get_qualifier 3 ,
.Xr acl_get_tag_type 3 ,
.Xr acl_set_entry 3 ,
.Xr acl_set_permset 3 ,
.Xr acl_set_tag_type 3 ,
.Xr acl 5
.Sh AUTHOR
Derived from the FreeBSD manual pages written by
.An "Robert N M Watson" Aq rwatson@FreeBSD.org ,
and adapted for Linux by
.An "Andreas Gruenbacher" Aq andreas.gruenbacher@gmail.com .
