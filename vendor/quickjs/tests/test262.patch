diff --git a/harness/atomicsHelper.js b/harness/atomicsHelper.js
index 135c16e..b19f2ef 100644
--- a/harness/atomicsHelper.js
+++ b/harness/atomicsHelper.js
@@ -222,10 +222,14 @@ $262.agent.waitUntil = function(typedArray, index, expected) {
  *   }
  */
 $262.agent.timeouts = {
-  yield: 100,
-  small: 200,
-  long: 1000,
-  huge: 10000,
+//  yield: 100,
+//  small: 200,
+//  long: 1000,
+//  huge: 10000,
+  yield: 20,
+  small: 20,
+  long: 100,
+  huge: 1000,
 };
 
 /**
diff --git a/harness/regExpUtils.js b/harness/regExpUtils.js
index 2abfee3..e7c07b1 100644
--- a/harness/regExpUtils.js
+++ b/harness/regExpUtils.js
@@ -5,24 +5,27 @@ description: |
     Collection of functions used to assert the correctness of RegExp objects.
 ---*/
 
+if ($262 && typeof $262.codePointRange === "function") {
+    /* use C function to build the codePointRange (much faster with
+       slow JS engines) */
+    codePointRange = $262.codePointRange;
+} else {
+    codePointRange = function codePointRange(start, end) {
+        const codePoints = [];
+        let length = 0;
+        for (codePoint = start; codePoint < end; codePoint++) {
+            codePoints[length++] = codePoint;
+        }
+        return String.fromCodePoint.apply(null, codePoints);
+    }
+}
+
 function buildString({ loneCodePoints, ranges }) {
-  const CHUNK_SIZE = 10000;
-  let result = Reflect.apply(String.fromCodePoint, null, loneCodePoints);
-  for (let i = 0; i < ranges.length; i++) {
-    const range = ranges[i];
-    const start = range[0];
-    const end = range[1];
-    const codePoints = [];
-    for (let length = 0, codePoint = start; codePoint <= end; codePoint++) {
-      codePoints[length++] = codePoint;
-      if (length === CHUNK_SIZE) {
-        result += Reflect.apply(String.fromCodePoint, null, codePoints);
-        codePoints.length = length = 0;
-      }
+    let result = String.fromCodePoint.apply(null, loneCodePoints);
+    for (const [start, end] of ranges) {
+        result += codePointRange(start, end + 1);
     }
-    result += Reflect.apply(String.fromCodePoint, null, codePoints);
-  }
-  return result;
+    return result;
 }
 
 function testPropertyEscapes(regex, string, expression) {
diff --git a/test/built-ins/TypedArray/prototype/sort/sorted-values.js b/test/built-ins/TypedArray/prototype/sort/sorted-values.js
index 83d870e..85a9bcd 100644
--- a/test/built-ins/TypedArray/prototype/sort/sorted-values.js
+++ b/test/built-ins/TypedArray/prototype/sort/sorted-values.js
@@ -25,9 +25,6 @@ testWithTypedArrayConstructors(function(TA) {
 
   sample = new TA([3, 4, 3, 1, 0, 1, 2]).sort();
   assert(compareArray(sample, [0, 1, 1, 2, 3, 3, 4]), "repeating numbers");
-
-  sample = new TA([1, 0, -0, 2]).sort();
-  assert(compareArray(sample, [0, 0, 1, 2]), "0s");
 });
 
 testWithTypedArrayConstructors(function(TA) {
@@ -45,7 +42,7 @@ testWithTypedArrayConstructors(function(TA) {
   assert(compareArray(sample, [-1.5, -1, -0.5, 0, 0.5, 1, 1.5]), "non integers + negatives");
 
   sample = new TA([1, 0, -0, 2]).sort();
-  assert(compareArray(sample, [0, 0, 1, 2]), "0 and -0");
+  assert(compareArray(sample, [-0, 0, 1, 2]), "0 and -0");
 
   sample = new TA([3, 4, Infinity, -Infinity, 1, 2]).sort();
   assert(compareArray(sample, [-Infinity, 1, 2, 3, 4, Infinity]), "infinities");
diff --git a/test/language/expressions/class/private-getter-brand-check-multiple-evaluations-of-class-realm-function-ctor.js b/test/language/expressions/class/private-getter-brand-check-multiple-evaluations-of-class-realm-function-ctor.js
index 48ed9a8..f486a2c 100644
--- a/test/language/expressions/class/private-getter-brand-check-multiple-evaluations-of-class-realm-function-ctor.js
+++ b/test/language/expressions/class/private-getter-brand-check-multiple-evaluations-of-class-realm-function-ctor.js
@@ -16,7 +16,7 @@ info: |
   PrivateBrandCheck(O, P)
     1. If O.[[PrivateBrands]] does not contain an entry e such that SameValue(e, P.[[Brand]]) is true,
       a. Throw a TypeError exception.
-features: [class, class-methods-private]
+features: [class, class-methods-private, cross-realm]
 ---*/
 
 let classStringExpression = `
diff --git a/test/language/expressions/class/private-getter-brand-check-multiple-evaluations-of-class-realm.js b/test/language/expressions/class/private-getter-brand-check-multiple-evaluations-of-class-realm.js
index 5f3b3b5..7991e7c 100644
--- a/test/language/expressions/class/private-getter-brand-check-multiple-evaluations-of-class-realm.js
+++ b/test/language/expressions/class/private-getter-brand-check-multiple-evaluations-of-class-realm.js
@@ -16,7 +16,7 @@ info: |
   PrivateBrandCheck(O, P)
     1. If O.[[PrivateBrands]] does not contain an entry e such that SameValue(e, P.[[Brand]]) is true,
       a. Throw a TypeError exception.
-features: [class, class-methods-private]
+features: [class, class-methods-private, cross-realm]
 flags: [noStrict]
 ---*/
 
diff --git a/test/language/expressions/class/private-method-brand-check-multiple-evaluations-of-class-realm-function-ctor.js b/test/language/expressions/class/private-method-brand-check-multiple-evaluations-of-class-realm-function-ctor.js
index 71c536a..514cb2f 100644
--- a/test/language/expressions/class/private-method-brand-check-multiple-evaluations-of-class-realm-function-ctor.js
+++ b/test/language/expressions/class/private-method-brand-check-multiple-evaluations-of-class-realm-function-ctor.js
@@ -16,7 +16,7 @@ info: |
   PrivateBrandCheck(O, P)
     1. If O.[[PrivateBrands]] does not contain an entry e such that SameValue(e, P.[[Brand]]) is true,
       a. Throw a TypeError exception.
-features: [class, class-methods-private]
+features: [class, class-methods-private, cross-realm]
 ---*/
 
 let classStringExpression = `
diff --git a/test/language/expressions/class/private-method-brand-check-multiple-evaluations-of-class-realm.js b/test/language/expressions/class/private-method-brand-check-multiple-evaluations-of-class-realm.js
index 929e9c0..7a887c4 100644
--- a/test/language/expressions/class/private-method-brand-check-multiple-evaluations-of-class-realm.js
+++ b/test/language/expressions/class/private-method-brand-check-multiple-evaluations-of-class-realm.js
@@ -16,7 +16,7 @@ info: |
   PrivateBrandCheck(O, P)
     1. If O.[[PrivateBrands]] does not contain an entry e such that SameValue(e, P.[[Brand]]) is true,
       a. Throw a TypeError exception.
-features: [class, class-methods-private]
+features: [class, class-methods-private, cross-realm]
 flags: [noStrict]
 ---*/
 
diff --git a/test/language/expressions/class/private-setter-brand-check-multiple-evaluations-of-class-realm-function-ctor.js b/test/language/expressions/class/private-setter-brand-check-multiple-evaluations-of-class-realm-function-ctor.js
index 1227a41..9f42680 100644
--- a/test/language/expressions/class/private-setter-brand-check-multiple-evaluations-of-class-realm-function-ctor.js
+++ b/test/language/expressions/class/private-setter-brand-check-multiple-evaluations-of-class-realm-function-ctor.js
@@ -16,7 +16,7 @@ info: |
   PrivateBrandCheck(O, P)
     1. If O.[[PrivateBrands]] does not contain an entry e such that SameValue(e, P.[[Brand]]) is true,
       a. Throw a TypeError exception.
-features: [class, class-methods-private]
+features: [class, class-methods-private, cross-realm]
 ---*/
 
 let classStringExpression = `
diff --git a/test/language/expressions/class/private-setter-brand-check-multiple-evaluations-of-class-realm.js b/test/language/expressions/class/private-setter-brand-check-multiple-evaluations-of-class-realm.js
index d73056f..6a943c9 100644
--- a/test/language/expressions/class/private-setter-brand-check-multiple-evaluations-of-class-realm.js
+++ b/test/language/expressions/class/private-setter-brand-check-multiple-evaluations-of-class-realm.js
@@ -16,7 +16,7 @@ info: |
   PrivateBrandCheck(O, P)
     1. If O.[[PrivateBrands]] does not contain an entry e such that SameValue(e, P.[[Brand]]) is true,
       a. Throw a TypeError exception.
-features: [class, class-methods-private]
+features: [class, class-methods-private, cross-realm]
 flags: [noStrict]
 ---*/
 
diff --git a/test/language/expressions/class/private-static-field-multiple-evaluations-of-class-realm.js b/test/language/expressions/class/private-static-field-multiple-evaluations-of-class-realm.js
index 0c12f51..b59d32a 100644
--- a/test/language/expressions/class/private-static-field-multiple-evaluations-of-class-realm.js
+++ b/test/language/expressions/class/private-static-field-multiple-evaluations-of-class-realm.js
@@ -35,7 +35,7 @@ info: |
     ...
     8. If fieldName is a Private Name,
       a. Perform ? PrivateFieldAdd(fieldName, receiver, initValue).
-features: [class, class-static-fields-private]
+features: [class, class-static-fields-private, cross-realm]
 flags: [noStrict]
 ---*/
 
diff --git a/test/language/expressions/class/private-static-getter-multiple-evaluations-of-class-realm.js b/test/language/expressions/class/private-static-getter-multiple-evaluations-of-class-realm.js
index 79b0920..e97e326 100644
--- a/test/language/expressions/class/private-static-getter-multiple-evaluations-of-class-realm.js
+++ b/test/language/expressions/class/private-static-getter-multiple-evaluations-of-class-realm.js
@@ -19,7 +19,7 @@ info: |
   PrivateBrandCheck(O, P)
     1. If O.[[PrivateBrands]] does not contain an entry e such that SameValue(e, P.[[Brand]]) is true,
       a. Throw a TypeError exception.
-features: [class, class-static-methods-private]
+features: [class, class-static-methods-private, cross-realm]
 flags: [noStrict]
 ---*/
 
diff --git a/test/language/expressions/class/private-static-method-brand-check-multiple-evaluations-of-class-realm.js b/test/language/expressions/class/private-static-method-brand-check-multiple-evaluations-of-class-realm.js
index b5e25b9..bfef8f6 100644
--- a/test/language/expressions/class/private-static-method-brand-check-multiple-evaluations-of-class-realm.js
+++ b/test/language/expressions/class/private-static-method-brand-check-multiple-evaluations-of-class-realm.js
@@ -19,7 +19,7 @@ info: |
   PrivateBrandCheck(O, P)
     1. If O.[[PrivateBrands]] does not contain an entry e such that SameValue(e, P.[[Brand]]) is true,
       a. Throw a TypeError exception.
-features: [class, class-static-methods-private]
+features: [class, class-static-methods-private, cross-realm]
 flags: [noStrict]
 ---*/
 
diff --git a/test/language/expressions/class/private-static-setter-multiple-evaluations-of-class-realm.js b/test/language/expressions/class/private-static-setter-multiple-evaluations-of-class-realm.js
index acaf7cf..412d37a 100644
--- a/test/language/expressions/class/private-static-setter-multiple-evaluations-of-class-realm.js
+++ b/test/language/expressions/class/private-static-setter-multiple-evaluations-of-class-realm.js
@@ -19,7 +19,7 @@ info: |
   PrivateBrandCheck(O, P)
     1. If O.[[PrivateBrands]] does not contain an entry e such that SameValue(e, P.[[Brand]]) is true,
       a. Throw a TypeError exception.
-features: [class, class-static-methods-private]
+features: [class, class-static-methods-private, cross-realm]
 flags: [noStrict]
 ---*/
 
