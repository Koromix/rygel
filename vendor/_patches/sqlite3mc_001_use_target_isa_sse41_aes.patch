diff --git a/vendor/sqlite3/sqlite3mc.c b/vendor/sqlite3/sqlite3mc.c
index 34a455a9d..9d970ce05 100644
--- a/vendor/sqlite3/sqlite3mc.c
+++ b/vendor/sqlite3/sqlite3mc.c
@@ -260580,12 +260580,9 @@ void RijndaelDecrypt(Rijndael* rijndael, UINT8 a[16], UINT8 b[16]);
 #define AES_HARDWARE_NI    1
 #define AES_HARDWARE_NEON  2
 
-#if defined __ARM_FEATURE_CRYPTO
-#define HAS_AES_HARDWARE AES_HARDWARE_NEON
-
 
 /* --- CLang --- */
-#elif defined(__clang__)
+#if defined(__clang__)
 
 #if __has_attribute(target) && __has_include(<wmmintrin.h>) && (defined(__x86_64__) || defined(__i386))
 #define HAS_AES_HARDWARE AES_HARDWARE_NI
@@ -260668,6 +260665,9 @@ toUint32FromLE(const void* buffer)
 
 #include <cpuid.h>
 
+/* FUNCtion attributes for ISA (Instruction Set Architecture) */
+#define FUNC_ISA __attribute__ ((target("aes,sse4.1")))
+
 static int
 aesHardwareCheck()
 {
@@ -260682,6 +260682,9 @@ aesHardwareCheck()
 
 #include <intrin.h>
 
+/* FUNCtion attributes for ISA (Instruction Set Architecture) */
+#define FUNC_ISA
+
 static int
 aesHardwareCheck()
 {
@@ -260695,7 +260698,7 @@ aesHardwareCheck()
 #include <wmmintrin.h>
 #include <smmintrin.h>
 
-static int
+static FUNC_ISA int
 aesGenKeyEncryptInternal(const unsigned char* userKey, const int bits, __m128i* keyData)
 {
   int rc = 0;
@@ -260748,7 +260751,7 @@ aesGenKeyEncryptInternal(const unsigned char* userKey, const int bits, __m128i*
   return rc;
 }
 
-static int
+static FUNC_ISA int
 aesGenKeyEncrypt(const unsigned char* userKey, const int bits, unsigned char* keyData)
 {
   int numberOfRounds = (bits == 128) ? 10 : (bits == 192) ? 12 : (bits == 256) ? 14 : 0;
@@ -260770,7 +260773,7 @@ aesGenKeyEncrypt(const unsigned char* userKey, const int bits, unsigned char* ke
   return rc;
 }
 
-static int
+static FUNC_ISA int
 aesGenKeyDecrypt(const unsigned char* userKey, const int bits, unsigned char* keyData)
 {
   int numberOfRounds = (bits == 128) ? 10 : (bits == 192) ? 12 : (bits == 256) ? 14 : 0;
@@ -260804,7 +260807,7 @@ aesGenKeyDecrypt(const unsigned char* userKey, const int bits, unsigned char* ke
 ** AES CBC CTS Encryption
 */
 
-static void
+static FUNC_ISA void
 aesEncryptCBC(const unsigned char* in,
               unsigned char* out,
               unsigned char ivec[16],
@@ -260871,7 +260874,7 @@ aesEncryptCBC(const unsigned char* in,
 /*
 ** AES CBC CTS decryption
 */
-static void
+static FUNC_ISA void
 aesDecryptCBC(const unsigned char* in,
               unsigned char* out,
               unsigned char ivec[16],
@@ -260961,18 +260964,7 @@ aesDecryptCBC(const unsigned char* in,
 #elif HAS_AES_HARDWARE == AES_HARDWARE_NEON
 /* --- Implementation for AES-NEON --- */
 
-/* Set target architecture manually, if necessary */
-#ifdef USE_CLANG_ATTR_TARGET_AARCH64
-#define __ARM_NEON 1
-#define __ARM_FEATURE_CRYPTO 1
-#define __ARM_FEATURE_AES 1
 #define FUNC_ISA __attribute__ ((target("neon,crypto")))
-#endif /* USE_CLANG_ATTR_TARGET_AARCH64 */
-
-/* FUNCtion attributes for ISA (Instruction Set Architecture) */
-#ifndef FUNC_ISA
-#define FUNC_ISA
-#endif
 
 #ifdef USE_ARM64_NEON_H
 #include <arm64_neon.h>
