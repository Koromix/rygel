diff --git a/vendor/libmicrohttpd/src/include/microhttpd.h b/vendor/libmicrohttpd/src/include/microhttpd.h
index b14575753..49d30be59 100644
--- a/vendor/libmicrohttpd/src/include/microhttpd.h
+++ b/vendor/libmicrohttpd/src/include/microhttpd.h
@@ -4328,6 +4328,18 @@ _MHD_EXTERN struct MHD_Response *
 MHD_create_response_empty (enum MHD_ResponseFlags flags);
 
 
+/**
+ * Move response headers from one response object to another.
+ *
+ * @param src response object to steal from
+ * @param dest response object to move headers to
+ * @ingroup response
+ */
+_MHD_EXTERN void
+MHD_move_response_headers (struct MHD_Response *src,
+                           struct MHD_Response *dest);
+
+
 /**
  * Enumeration for actions MHD should perform on the underlying socket
  * of the upgrade.  This API is not finalized, and in particular
diff --git a/vendor/libmicrohttpd/src/microhttpd/response.c b/vendor/libmicrohttpd/src/microhttpd/response.c
index ed1326ab6..7ee5dfd33 100644
--- a/vendor/libmicrohttpd/src/microhttpd/response.c
+++ b/vendor/libmicrohttpd/src/microhttpd/response.c
@@ -1845,6 +1845,36 @@ MHD_create_response_empty (enum MHD_ResponseFlags flags)
 }
 
 
+/**
+ * Move response headers from one response object to another.
+ *
+ * @param src response object to steal from
+ * @param dest response object to move headers to
+ * @ingroup response
+ */
+_MHD_EXTERN void
+MHD_move_response_headers (struct MHD_Response *src,
+                           struct MHD_Response *dest)
+{
+  struct MHD_HTTP_Header *last_header;
+
+  if (NULL == src->first_header)
+    return;
+
+  if (NULL == dest->first_header) {
+    dest->first_header = src->first_header;
+    dest->last_header = src->last_header;
+  } else {
+    dest->last_header->next = src->first_header;
+    src->first_header->prev = dest->last_header;
+    dest->last_header = src->last_header;
+  }
+
+  src->first_header = NULL;
+  src->last_header = NULL;
+}
+
+
 #ifdef UPGRADE_SUPPORT
 /**
  * This connection-specific callback is provided by MHD to
