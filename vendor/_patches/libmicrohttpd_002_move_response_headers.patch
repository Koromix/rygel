diff --git a/vendor/libmicrohttpd/src/include/microhttpd.h b/vendor/libmicrohttpd/src/include/microhttpd.h
index 2ab208a01..3dd32c339 100644
--- a/vendor/libmicrohttpd/src/include/microhttpd.h
+++ b/vendor/libmicrohttpd/src/include/microhttpd.h
@@ -3323,6 +3323,18 @@ MHD_create_response_from_iovec (const struct MHD_IoVec *iov,
                                 void *cls);
 
 
+/**
+ * Move response headers from one response object to another.
+ *
+ * @param src response object to steal from
+ * @param dest response object to move headers to
+ * @ingroup response
+ */
+_MHD_EXTERN void
+MHD_move_response_headers (struct MHD_Response *src,
+                           struct MHD_Response *dest);
+
+
 /**
  * Enumeration for actions MHD should perform on the underlying socket
  * of the upgrade.  This API is not finalized, and in particular
diff --git a/vendor/libmicrohttpd/src/microhttpd/response.c b/vendor/libmicrohttpd/src/microhttpd/response.c
index cc0cd38bc..573de948c 100644
--- a/vendor/libmicrohttpd/src/microhttpd/response.c
+++ b/vendor/libmicrohttpd/src/microhttpd/response.c
@@ -987,6 +987,31 @@ MHD_create_response_from_iovec (const struct MHD_IoVec *iov,
 }
 
 
+/**
+ * Move response headers from one response object to another.
+ *
+ * @param src response object to steal from
+ * @param dest response object to move headers to
+ * @ingroup response
+ */
+_MHD_EXTERN void
+MHD_move_response_headers (struct MHD_Response *src,
+                           struct MHD_Response *dest)
+{
+  struct MHD_HTTP_Header *last_header;
+
+  if (NULL != src->first_header) {
+    last_header = src->first_header;
+    while (NULL != last_header->next)
+      last_header = last_header->next;
+
+    last_header->next = dest->first_header;
+    dest->first_header = src->first_header;
+    src->first_header = NULL;
+  }
+}
+
+
 #ifdef UPGRADE_SUPPORT
 /**
  * This connection-specific callback is provided by MHD to
