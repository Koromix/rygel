/* SPDX-License-Identifier: GPL-3.0-or-later */
/* SPDX-FileCopyrightText: 2025 Niels Martign√®ne <niels.martignene@protonmail.com> */

@import url('../../web/core/reset.css');

/* -------------------- Layout -------------------- */

html { height: 100%; }
body {
    height: 100%;
    margin: 0;
    padding: 0;
    font-family: 'Open Sans', sans-serif;
    font-size: 13px;
    line-height: 1.5;
}

#th_side {
    display: flex;
    flex-direction: column;
    position: fixed;
    left: 0;
    top: 0;
    box-sizing: border-box;
    min-height: 100%;
    width: 200px;
    z-index: 999;
    background: #262626;
    color: #eeeeee;
}

main {
    display: block;
    box-sizing: border-box;
    max-width: 1200px;
    margin-left: 200px;
    padding: 6px 12px 6px 12px;
}

@media (pointer: coarse) or (max-width: 1100px) {
    #th_side {
        display: block;
        width: 100%;
        min-height: 0;
        overflow: hidden;
    }

    main {
        max-width: none;
        margin: 38px 0 0 0;
        padding: 0;
    }
    main * { scroll-margin: 38px; }
}

/* -------------------- Common elements -------------------- */

a {
    color: #ff6600;
    text-decoration: none;
    font-weight: normal;
}
a:hover { text-decoration: underline; }

button { cursor: pointer; }

.th_form {
    width: 340px;
    max-width: 340px;
}
.th_form label {
    display: block;
    margin: 0 0 15px 0;
}
.th_form label > * { float: right; }
.th_form button, .th_form input[type=submit] {
    display: block;
    margin: 0 auto;
}

@media (pointer: coarse) or (max-width: 1100px) {
    .th_form {
        width: auto;
        margin: 0 auto;
        padding: 8px;
    }
}

/* -------------------- Sidebar -------------------- */

#th_logo {
    display: block;
    margin: 2em auto 1.2em auto;
}

.th_deploy { display: none; }

#th_bar {
    flex: 1;
    display: flex;
    align-items: start;
}

#th_menu { flex: 1; }
#th_menu a.category {
    display: block;
    padding-left: 0.5em;
    box-sizing: border-box;
    font-weight: bold;
    font-variant: small-caps;
}
#th_menu a {
    display: block;
    padding: 0.5em 0.5em 0.5em 2em;
    box-sizing: border-box;
    width: 100%;
    text-decoration: none;
    color: inherit;
}
#th_menu a:not(.category):not(.active):hover { background: #38383b; }
#th_menu a:not(.category).active:hover { background: #525155; }
#th_menu a.active { background: #4a494d; }

#th_version {
    padding: 0 2px 4px 2px;
    text-align: center;
    font-size: 0.8em;
}
@media (pointer: coarse) or (max-width: 1100px), (-ms-high-contrast: active), (-ms-high-contrast: none) {
    #th_version { display: none; }
}

@media (pointer: coarse) or (max-width: 1100px) {
    #th_logo { display: none; }

    .th_deploy {
        display: block;
        width: 38px;
        height: 38px;
        cursor: pointer;
        z-index: 999;
    }

    #th_menu {
        min-height: 38px;
        font-size: 1.2em;
    }
    #th_menu:not(.active) {
        max-height: 38px;
        margin-left: -1.5em;
    }
    #th_menu:not(.active) a:not(.active) { display: none; }
    #th_menu a.active { background: #262626; }
    #th_menu a.active:not(.category):hover { background: #262626; }
}

/* -------------------- Main -------------------- */

#th_header {
    margin: 0 0 6px 0;
    text-align: center;
}

#th_session {
    position: fixed;
    left: 0;
    top: 0;
    width: 200px;
    padding: 6px 2px;
    text-align: center;
    font-size: 0.8em;
    z-index: 9999;
    color: white;
}

#th_view.busy {
    animation: th_view_busy 1s 1 linear;
    filter: grayscale(100%);
    opacity: 0.2;
    pointer-events: none;
}
@keyframes th_view_busy {
    from { filter: grayscale(0); opacity: 1; }
    40% { filter: grayscale(0); opacity: 1; }
    60% { filter: grayscale(100%); opacity: 0.2; }
    to { filter: grayscale(100%); opacity: 0.2; }
}
#th_view.error {
    font-size: 1.3em;
    color: red;
    padding: 10px;
    text-align: center;
}

@media (pointer: coarse) or (max-width: 1100px) {
    #th_header {
        position: fixed;
        top: 38px;
        box-sizing: border-box;
        width: 100%;
        padding: 8px;
        background: #eeeeee;
        z-index: 999;
        font-size: 1.1em;
    }
    #th_header:not(.active) { display: none; }

    #th_session {
        position: static;
        width: auto;
        padding-top: 0;
        font-size: inherit;
        color: inherit;
    }

    #th_options > * { max-width: 100%; }
    #th_options label {
        display: block;
        clear: both;
        margin-bottom: 12px;
        text-align: left;
    }
    #th_options label > input, #th_options label > select { float: right; }
}

/* -------------------- Notifications -------------------- */

#th_log {
    position: fixed;
    left: calc(50% - 180px);
    top: 20px;
    width: 360px;
    z-index: 9999999;
    user-select: none;
    -moz-user-select: none;
    -webkit-user-select: none;
    -ms-user-select: none;
}

#th_log > div {
    margin-bottom: 8px;
    padding: 10px;
    background: #373737;
    color: white;
    box-shadow: 1px 1px rgba(0, 0, 0, 0.5);
    text-align: center;
    filter: opacity(96%);
}
@media (hover: hover) {
    #th_log > div:hover { filter: opacity(40%); }
}
#th_log > div.warning { background: #ff6600; }
#th_log > div.error { background: #db0a0a; }
#th_log > div.success { background: #016a27; }

.th_log_close {
    float: right;
    padding: 2px 6px;
    background: none;
    border: 0;
    color: white;
    font-weight: bold;
}

/* Came from https://loading.io/css/ */
.th_log_spin {
    float: left;
    display: inline-block;
    box-sizing: border-box;
    width: 20px;
    height: 20px;
    margin: -2px 0 0 -2px;
}
.th_log_spin::after {
    content: ' ';
    display: block;
    width: 12px;
    height: 12px;
    margin: 1px;
    border-radius: 50%;
    border: 4px solid white;
    border-color: white transparent white transparent;
    animation: th_log_spin 0.8s ease-in-out infinite;
}
@keyframes th_log_spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

/* -------------------- Misc -------------------- */

label:has(input[type=checkbox]), label:has(input[type=radio]) { cursor: pointer; }
input[type=checkbox], input[type=radio] { cursor: pointer; }
