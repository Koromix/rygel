#!/usr/bin/env python3

# Copyright 2023 Niels Martignène <niels.martignene@protonmail.com>

# Permission is hereby granted, free of charge, to any person obtaining a copy of
# this software and associated documentation files (the “Software”), to deal in
# the Software without restriction, including without limitation the rights to use,
# copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the
# Software, and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.

import sys
import re
import argparse

def parse_properties_xid(f):
    id_start = []
    id_continue = []

    version = next(f).strip("\n\r \t#") + ' -- ' + next(f).strip("\n\r \t#")

    for line in f:
        line = line.strip()

        if not line or line[0] == '#':
            continue

        parts = [part.strip() for part in re.split('[;#]', line)]
        if len(parts) < 3:
            continue

        if '..' in parts[0]:
            start, end = parts[0].split('..')
        else:
            start, end = parts[0], parts[0]
        start, end = int(start, 16), int(end, 16)

        if parts[1] == 'ID_Start':
            id_start.append((start, end + 1))
        elif parts[1] == 'ID_Continue':
            id_continue.append((start, end + 1))

    return (version, id_start, id_continue)

def write_xid_header(version, id_start, id_continue, f):
    f.write(f"""// Permission is hereby granted, free of charge, to any person obtaining a copy of
// this software and associated documentation files (the “Software”), to deal in
// the Software without restriction, including without limitation the rights to use,
// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the
// Software, and to permit persons to whom the Software is furnished to do so,
// subject to the following conditions:

// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
// OTHER DEALINGS IN THE SOFTWARE.

// This file is autogenerated by xid_gen.py
// Version: {version}

namespace RG {{

static const int32_t XidStartTable[] = {{""")
    for i, v in enumerate(id_start):
        if i % 5 == 0: f.write('\n   ')
        f.write(f' 0x{v[0]:05X}, 0x{v[1]:05X}{"," if i + 1 < len(id_start) else ""}')
    f.write("""
};

static const int32_t XidContinueTable[] = {""")
    for i, v in enumerate(id_continue):
        if i % 5 == 0: f.write('\n   ')
        f.write(f' 0x{v[0]:05X}, 0x{v[1]:05X}{"," if i + 1 < len(id_continue) else ""}')
    f.write("""
};

}
""")

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description = 'Create xid.hh from Unicode file DerivedCoreProperties.txt')
    parser.add_argument('filename', metavar = 'source', type = str, nargs = 1,
                        help = 'path to DerivedCoreProperties.txt')
    args = parser.parse_args()

    with open(args.filename[0], 'r') as f:
        version, id_start, id_continue = parse_properties_xid(f)

    write_xid_header(version, id_start, id_continue, sys.stdout)
